---
title: "Homework 1"
subtitle: "Research Methods, Spring 2025"
author: "Ryan Scholte"
format:
  pdf:
    output-file: "Scholte-i-hw1-2"
    output-ext: "pdf"
    header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
jupyter: python3
---
You can access the [Repository](https://github.com/rscholt/HW1/tree/4a7a8787afe3dc853e41539203463b71327defe9/submission2)

```{python}
#| echo: false  # Hides code but keeps output
import pandas as pd
from IPython.display import display, Markdown

# Load the dataset
merged_data = pd.read_csv('../../data/output/merged_datax.csv')
```

\newpage

# Count of Plans by Type

```{python}
#| echo: false  # Hides code but keeps output
# Count the number of plans for each plan type and display results
plan_counts = merged_data['Plan Type'].value_counts()
display(Markdown(plan_counts.to_markdown()))
```

\newpage

# Removing Special Needs Plans (SNP), Employer Group Plans (eghp), and "800-series" Plans

```{python}
#| echo: false  # Hides code but keeps output
# Filter out SNP, eghp, and 800-series plans
merged_data2= merged_data[~merged_data['SNP Plan'].str.contains('Yes', na=False) &
                           ~merged_data['EGHP'].str.contains('Yes', na=False) &
                           ~merged_data['Plan ID'].between(800, 900, inclusive="left")]

plan_counts2 = merged_data2['Plan Type'].value_counts()
#plan_counts2.style.format({'Plan Count': '{:,.0f}'}).hide(axis='index')
display(Markdown(plan_counts2.to_markdown()))
```

\newpage

# Average Enrollments by Plan Type

```{python}
#| echo: false  # Hides code but keeps output
merged_data2.loc[:, 'Enrollment'] = pd.to_numeric(merged_data2['Enrollment'], errors='coerce')
# Create table for enrollment count and average enrollment for each plan type
enrollment_summary = merged_data2.groupby('Plan Type')['Enrollment'].agg(['count', 'mean']).reset_index()
enrollment_summary.columns = ['Plan Type', 'Enrollment Count', 'Average Enrollment']
enrollment_summary = enrollment_summary.sort_values(by='Enrollment Count', ascending=False)

# Display the table
display(Markdown(enrollment_summary.to_markdown(index=False)))
```
